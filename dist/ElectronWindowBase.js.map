{"version":3,"sources":["ElectronWindowBase.ts"],"names":[],"mappings":"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","file":"ElectronWindowBase.js","sourcesContent":["import * as eltr from 'electron';\r\nimport { EventEmitter } from 'events';\r\n\r\nimport { Guard } from 'back-lib-common-util';\r\n\r\n\r\nexport abstract class ElectronWindowBase\r\n\textends eltr.BrowserWindow {\r\n\r\n\tprotected _app: Electron.App;\r\n\r\n\tpublic get name(): string {\r\n\t\treturn this._name;\r\n\t}\r\n\r\n\tpublic set app(app: Electron.App) {\r\n\t\tthis._app = app;\r\n\t}\r\n\r\n\t/**\r\n\t * @param _name Name of this window\r\n\t */\r\n\tconstructor(\r\n\t\tprotected readonly _name: string,\r\n\t\toptions?: Electron.BrowserWindowConstructorOptions\r\n\t) {\r\n\t\tsuper(options);\r\n\t}\r\n\r\n\t/**\r\n\t * Do not call this method explicitly. It should be called in ElectronAppBase.addWindow\r\n\t */\r\n\tpublic abstract start(): void;\r\n\r\n\tpublic clearCache(): Promise<void> {\r\n\t\treturn new Promise<void>((resolve) => {\r\n\t\t\tthis.webContents.session.clearCache(() => resolve);\r\n\t\t});\r\n\t}\r\n\r\n\tpublic clearStorage(): Promise<void> {\r\n\t\treturn new Promise<void>((resolve) => {\r\n\t\t\tlet options = {\r\n\t\t\t\tstorages: [\r\n\t\t\t\t\t'appcache',\r\n\t\t\t\t\t'cookies',\r\n\t\t\t\t\t'filesystem',\r\n\t\t\t\t\t'indexdb',\r\n\t\t\t\t\t'localstorage',\r\n\t\t\t\t\t'shadercache',\r\n\t\t\t\t\t'websql',\r\n\t\t\t\t\t'serviceworkers',\r\n\t\t\t\t],\r\n\t\t\t\tquotas: [\r\n\t\t\t\t\t'temporary',\r\n\t\t\t\t\t'persistent',\r\n\t\t\t\t\t'syncable',\r\n\t\t\t\t],\r\n\t\t\t\torigin: '*'\r\n\t\t\t};\r\n\r\n\t\t\tthis.webContents.session.clearStorageData(options, resolve);\r\n\t\t});\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Adds a listener to call when the window is going to be closed.\r\n\t * Itâ€™s emitted before the beforeunload and unload event of the DOM.\r\n\t * Calling event.preventDefault() will cancel the close.\r\n\t */\r\n\tpublic onClosing(handler: (event: Electron.Event) => void) {\r\n\t\tGuard.assertDefined('handler', handler);\r\n\t\tthis.on('close', handler);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a listener to call after the window has been closed. \r\n\t * After you have received this event you should remove \r\n\t * the reference to the window and avoid using it any more.\r\n\t */\r\n\tpublic onClosed(handler: Function) {\r\n\t\tGuard.assertDefined('handler', handler);\r\n\t\tthis.on('closed', handler);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a listener to call when the window loses focus.\r\n\t */\r\n\tpublic onBlur(handler: Function) {\r\n\t\tGuard.assertDefined('handler', handler);\r\n\t\tthis.on('blur', handler);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a listener to call when the window gains focus.\r\n\t */\r\n\tpublic onFocus(handler: Function) {\r\n\t\tGuard.assertDefined('handler', handler);\r\n\t\tthis.on('focus', handler);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a listener to call when the web page has been rendered \r\n\t * (while not being shown) and window can be displayed without a visual flash.\r\n\t */\r\n\tpublic onShowing(handler: Function) {\r\n\t\tGuard.assertDefined('handler', handler);\r\n\t\tthis.on('ready-to-show', handler);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a listener to call after the window has been shown.\r\n\t */\r\n\tpublic onShown(handler: Function) {\r\n\t\tGuard.assertDefined('handler', handler);\r\n\t\tthis.on('show', handler);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a listener to call when the spinner of the tab started spinning.\r\n\t */\r\n\tpublic onContentLoading(handler: Function) {\r\n\t\tGuard.assertDefined('handler', handler);\r\n\t\tthis.webContents.on('did-start-loading', handler);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a listener to call when the navigation is done, i.e. the spinner of the tab has stopped\r\n     * spinning, and the onload event was dispatched.\r\n\t */\r\n\tpublic onContentLoaded(handler: Function) {\r\n\t\tGuard.assertDefined('handler', handler);\r\n\t\tthis.webContents.on('did-finish-load', handler);\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a listener to call when the document in the given frame is loaded.\r\n\t */\r\n\tpublic onContentDomReady(handler: (event: Electron.Event) => void) {\r\n\t\tGuard.assertDefined('handler', handler);\r\n\t\tthis.webContents.on('dom-ready', handler);\r\n\t}\r\n}"]}