{"version":3,"sources":["MainLogger.ts"],"names":[],"mappings":"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","file":"MainLogger.js","sourcesContent":["import * as fs from 'fs';\r\nimport * as path from 'path';\r\nimport * as util from 'util';\r\n\r\nimport * as winston from 'winston';\r\nimport 'winston-daily-rotate-file';\r\n\r\n\r\nconst DEFAULT_LOCATION = path.join(process.cwd(), 'logs');\r\n\r\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error';\r\n\r\nexport interface LoggerOptions {\r\n\t/**\r\n\t * Path to directory in which debug file is created.\r\n\t * Default is: {appRoot}/logs/debug.log\r\n\t */\r\n\tdebugDirPath?: string;\r\n\r\n\t/**\r\n\t * Path to directory in which error file is created.\r\n\t * Default is: {appRoot}/logs/error.log\r\n\t */\r\n\terrorDirPath?: string;\r\n}\r\n\r\n/**\r\n * Logger for main process, writes logs to system console and files.\r\n */\r\nexport class MainLogger {\r\n\r\n\tprivate _infoLogger: winston.LoggerInstance;\r\n\tprivate _debugLogger: winston.LoggerInstance;\r\n\tprivate _errorLogger: winston.LoggerInstance;\r\n\r\n\tconstructor(private _options: LoggerOptions = {}) {\r\n\t\tthis._options = Object.assign(<LoggerOptions>{\r\n\t\t\tdebugDirPath: DEFAULT_LOCATION,\r\n\t\t\terrorDirPath: DEFAULT_LOCATION,\r\n\t\t}, this._options);\r\n\t\tthis.init();\r\n\t}\r\n\r\n\t/**\r\n\t * Writes message to console.\r\n\t */\r\n\tpublic info(message: any): Promise<void> {\r\n\t\treturn this.logConsole('info', message);\r\n\t}\r\n\r\n\t/**\r\n\t * Writes message to console and debug file.\r\n\t */\r\n\tpublic debug(message: any): Promise<void> {\r\n\t\treturn this.logDebug('debug', message);\r\n\t}\r\n\r\n\t/**\r\n\t * Writes message to console and error file.\r\n\t */\r\n\tpublic warn(message: any): Promise<void> {\r\n\t\treturn this.logError('warn', message);\r\n\t}\r\n\r\n\t/**\r\n\t * Writes message to console and error file.\r\n\t */\r\n\tpublic error(message: any): Promise<void> {\r\n\t\treturn this.logError('error', message);\r\n\t}\r\n\r\n\r\n\tprivate logConsole(level: LogLevel, message: any): Promise<void> {\r\n\t\tif (!message) { return; }\r\n\t\t\r\n\t\treturn this.log(level, message, this._infoLogger);\r\n\t}\r\n\r\n\tprivate logDebug(level: LogLevel, message: any): Promise<void> {\r\n\t\tif (!message) { return; }\r\n\t\t\r\n\t\treturn this.log(level, message, this._debugLogger);\r\n\t}\r\n\r\n\tprivate logError(level: LogLevel, error: any): Promise<void> {\r\n\t\tif (!error) { return; }\r\n\r\n\t\tlet text;\r\n\t\tif (error.message || error.stack) {\r\n\t\t\ttext = util.format('%s. Stacktrace: %s', error.message || '', error.stack || '');\r\n\t\t} else {\r\n\t\t\ttext = error;\r\n\t\t}\r\n\r\n\t\treturn this.log(level, text, this._errorLogger);\r\n\t}\r\n\r\n\tprivate log(level: LogLevel, message: any, logger: winston.LoggerInstance): Promise<void> {\r\n\t\treturn new Promise<void>((resolve, reject) => {\r\n\t\t\tlogger.log(level, message + '', (err) => {\r\n\t\t\t\tif (err) {\r\n\t\t\t\t\treject(err);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tresolve();\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tprivate init(): void {\r\n\t\tthis._infoLogger = new winston.Logger({\r\n\t\t\ttransports: [\r\n\t\t\t\tnew (winston.transports.Console)({\r\n\t\t\t\t\tlevel: 'info'\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t});\r\n\r\n\t\tlet debugDir = this._options.debugDirPath;\r\n\t\tif (!fs.existsSync(debugDir)) {\r\n\t\t\tfs.mkdirSync(debugDir);\r\n\t\t}\r\n\r\n\t\tthis._debugLogger = new winston.Logger({\r\n\t\t\ttransports: [\r\n\t\t\t\tnew (winston.transports.Console)({\r\n\t\t\t\t\tlevel: 'debug'\r\n\t\t\t\t}),\r\n\t\t\t\tnew (winston.transports.DailyRotateFile)({\r\n\t\t\t\t\tfilename: path.join(debugDir, 'debug'),\r\n\t\t\t\t\tdatePattern: '-yyyy-MM-dd.log',\r\n\t\t\t\t\tlevel: 'debug'\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t});\r\n\r\n\t\tlet errorDir = this._options.errorDirPath;\r\n\t\tif (!fs.existsSync(errorDir)) {\r\n\t\t\tfs.mkdirSync(errorDir);\r\n\t\t}\r\n\r\n\t\tthis._errorLogger = new winston.Logger({\r\n\t\t\ttransports: [\r\n\t\t\t\tnew (winston.transports.Console)({\r\n\t\t\t\t\tlevel: 'warn'\r\n\t\t\t\t}),\r\n\t\t\t\tnew (winston.transports.DailyRotateFile)({\r\n\t\t\t\t\tfilename: path.join(errorDir, 'error'),\r\n\t\t\t\t\tdatePattern: '-yyyy-MM-dd.log',\r\n\t\t\t\t\tlevel: 'warn'\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t});\r\n\t}\r\n}"]}