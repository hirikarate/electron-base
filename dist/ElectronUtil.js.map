{"version":3,"sources":["ElectronUtil.ts"],"names":[],"mappings":";;AAEA,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,SAAS,EAAE;IACxC,KAAK,EAAE,OAAO,CAAC,GAAG,EAAE;IACpB,QAAQ,EAAE,KAAK;CACf,CAAC,CAAC;AAEH,uCAAuC;AAGvC,MAAM,SAAS,GAAG,qDAAqD,CAAC;AAExE;IAEQ,MAAM,CAAC,QAAQ,CAAC,IAAY,EAAE,QAAQ,EAAE,GAAG,MAAM;QACvD,EAAE,CAAC,CAAC,CAAC,sBAAW,CAAC,CAAC,CAAC;YAClB,MAAM,SAAS,CAAC;QACjB,CAAC;QAED,IAAI,eAAe,GAAG,IAAI,GAAG,WAAW,CAAC;QAEzC,sBAAW,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,KAAK,EAAE,GAAG;YAC5C,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAAC,MAAM,CAAC;YAAC,CAAC;YAC1B,QAAQ,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;QAEH,sBAAW,CAAC,IAAI,CAAC,iBAAiB,EAAE;YACnC,IAAI,EAAE,IAAI;YACV,MAAM,EAAE,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;YAChD,QAAQ,EAAE,eAAe;SACzB,CAAC,CAAC;IACJ,CAAC;IAEM,MAAM,CAAC,YAAY,CAAC,IAAI,EAAE,MAAY;QAC5C,EAAE,CAAC,CAAC,CAAC,sBAAW,CAAC,CAAC,CAAC;YAClB,MAAM,SAAS,CAAC;QACjB,CAAC;QACD,MAAM,CAAC,sBAAW,CAAC,QAAQ,CAAC,gBAAgB,EAAE;YAC7C,IAAI,EAAE,IAAI;YACV,MAAM,EAAE,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;SAChD,CAAC,CAAC;IACJ,CAAC;CACD;AA9BD,oCA8BC;AAED,EAAE,CAAC,CAAC,sBAAW,CAAC,CAAC,CAAC;IAEjB,MAAM,CAAC,SAAS,CAAC,GAAG,YAAY,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC;IAChE,MAAM,CAAC,SAAS,CAAC,GAAG,YAAY,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC;AACjE,CAAC","file":"ElectronUtil.js","sourcesContent":["\r\n// Add read-only property\r\nObject.defineProperty(global, 'appRoot', {\r\n\tvalue: process.cwd(),\r\n\twritable: false\r\n});\r\n\r\nimport { ipcRenderer } from 'electron';\r\n\r\n\r\nconst ERROR_MSG = 'This function is only available on renderer process';\r\n\r\nexport class ElectronUtil {\r\n\r\n\tpublic static callMain(func: string, callback, ...params) {\r\n\t\tif (!ipcRenderer) {\r\n\t\t\tthrow ERROR_MSG;\r\n\t\t}\r\n\r\n\t\tlet responseChannel = func + '-response';\r\n\t\t\r\n\t\tipcRenderer.once(responseChannel, (event, arg) => {\r\n\t\t\tif (!callback) { return; }\r\n\t\t\tcallback(arg.error, arg.result);\r\n\t\t});\r\n\t\t\r\n\t\tipcRenderer.send('async-func-call', {\r\n\t\t\tfunc: func,\r\n\t\t\tparams: Array.prototype.slice.call(arguments, 2),\r\n\t\t\tresponse: responseChannel\r\n\t\t});\t\t\r\n\t}\r\n\r\n\tpublic static callMainSync(func, params?: any): any {\r\n\t\tif (!ipcRenderer) {\r\n\t\t\tthrow ERROR_MSG;\r\n\t\t}\r\n\t\treturn ipcRenderer.sendSync('sync-func-call', {\r\n\t\t\tfunc: func,\r\n\t\t\tparams: Array.prototype.slice.call(arguments, 1)\r\n\t\t});\r\n\t}\r\n}\r\n\r\nif (ipcRenderer) {\r\n\t// Get application root path from main thread.\r\n\tglobal['appRoot'] = ElectronUtil.callMainSync('appRoot').result;\r\n\tglobal['webRoot'] = ElectronUtil.callMainSync('webRoot').result;\r\n}"]}