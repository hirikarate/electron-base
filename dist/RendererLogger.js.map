{"version":3,"sources":["RendererLogger.ts"],"names":[],"mappings":";;AAKA;;;GAGG;AACH;IAEC,YAA6B,WAAuB;QAAvB,gBAAW,GAAX,WAAW,CAAY;IACpD,CAAC;IAED;;;OAGG;IACI,IAAI,CAAC,OAAY;QACvB,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACvB,CAAC;IAED;;;OAGG;IACI,KAAK,CAAC,OAAY;QACxB,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACxB,CAAC;IAED;;;OAGG;IACI,IAAI,CAAC,OAAY;QACvB,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACvB,CAAC;IAED;;;OAGG;IACI,KAAK,CAAC,OAAY;QACxB,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACvB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACjC,CAAC;CAED;AAtCD,wCAsCC","file":"RendererLogger.js","sourcesContent":["import * as util from 'util';\r\n\r\nimport { MainLogger, LogLevel } from './MainLogger';\r\n\r\n\r\n/**\r\n * Logger for renderer process, writes debug logs to browser console,\r\n * and delegates error logs to main logger to write to files.\r\n */\r\nexport class RendererLogger {\r\n\r\n\tconstructor(private readonly _mainLogger: MainLogger) {\r\n\t}\r\n\r\n\t/**\r\n\t * Writes info message to browser console.\r\n\t * @param message A string, support %s (string), %i (number).\r\n\t */\r\n\tpublic info(message: any): void {\r\n\t\tconsole.info(message);\r\n\t}\r\n\r\n\t/**\r\n\t * Writes debug message to browser console.\r\n\t * @param message A string, support %s (string), %i (number).\r\n\t */\r\n\tpublic debug(message: any): void {\r\n\t\tconsole.debug(message);\r\n\t}\r\n\r\n\t/**\r\n\t * Writes warn message to browser console.\r\n\t * @param message A string, support %s (string), %i (number).\r\n\t */\r\n\tpublic warn(message: any): void {\r\n\t\tconsole.warn(message);\r\n\t}\r\n\r\n\t/**\r\n\t * Writes error message to browser console AND sends to main process to dumb to file.\r\n\t * @param message A string, support %s (string), %i (number).\r\n\t */\r\n\tpublic error(message: any): void {\r\n\t\tconsole.error(message);\r\n\t\tthis._mainLogger.error(message);\r\n\t}\r\n\r\n}"]}