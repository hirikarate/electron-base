{"version":3,"sources":["RendererLogger.ts"],"names":[],"mappings":";;AAAA,6BAA6B;AAK7B;;;GAGG;AACH;IAEC,YAA6B,WAAuB;QAAvB,gBAAW,GAAX,WAAW,CAAY;IACpD,CAAC;IAED;;;;OAIG;IACI,IAAI,CAAC,OAAa,EAAE,GAAG,cAAqB;QAClD,EAAE,CAAC,CAAC,cAAc,IAAI,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;YAC7C,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;QACvC,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACvB,CAAC;IACF,CAAC;IAED;;;;OAIG;IACI,KAAK,CAAC,OAAa,EAAE,GAAG,cAAqB;QACnD,EAAE,CAAC,CAAC,cAAc,IAAI,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;YAC7C,OAAO,CAAC,KAAK,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;QACxC,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACxB,CAAC;IACF,CAAC;IAED;;;;OAIG;IACI,IAAI,CAAC,OAAa,EAAE,GAAG,cAAqB;QAClD,EAAE,CAAC,CAAC,cAAc,IAAI,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;YAC7C,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;QACvC,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACvB,CAAC;IACF,CAAC;IAED;;;;OAIG;IACI,KAAK,CAAC,OAAa,EAAE,GAAG,cAAqB;QACnD,EAAE,CAAC,CAAC,cAAc,IAAI,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;YAC7C,OAAO,CAAC,KAAK,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;YACvC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC,CAAC;QAC9D,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YACvB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACjC,CAAC;IACF,CAAC;CAED;AA3DD,wCA2DC","file":"RendererLogger.js","sourcesContent":["import * as util from 'util';\r\n\r\nimport { MainLogger, LogLevel } from './MainLogger';\r\n\r\n\r\n/**\r\n * Logger for renderer process, writes debug logs to browser console,\r\n * and delegates error logs to main logger to write to files.\r\n */\r\nexport class RendererLogger {\r\n\r\n\tconstructor(private readonly _mainLogger: MainLogger) {\r\n\t}\r\n\r\n\t/**\r\n\t * Writes info message to browser console.\r\n\t * @param message A string, support %s (string), %i (number).\r\n\t * @param optionalParams Params to take place of %s and %i in `message`.\r\n\t */\r\n\tpublic info(message?: any, ...optionalParams: any[]): void {\r\n\t\tif (optionalParams && optionalParams.length) {\r\n\t\t\tconsole.info(message, optionalParams);\r\n\t\t} else {\r\n\t\t\tconsole.info(message);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Writes debug message to browser console.\r\n\t * @param message A string, support %s (string), %i (number).\r\n\t * @param optionalParams Params to take place of %s and %i in `message`.\r\n\t */\r\n\tpublic debug(message?: any, ...optionalParams: any[]): void {\r\n\t\tif (optionalParams && optionalParams.length) {\r\n\t\t\tconsole.debug(message, optionalParams);\r\n\t\t} else {\r\n\t\t\tconsole.debug(message);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Writes warn message to browser console.\r\n\t * @param message A string, support %s (string), %i (number).\r\n\t * @param optionalParams Params to take place of %s and %i in `message`.\r\n\t */\r\n\tpublic warn(message?: any, ...optionalParams: any[]): void {\r\n\t\tif (optionalParams && optionalParams.length) {\r\n\t\t\tconsole.warn(message, optionalParams);\r\n\t\t} else {\r\n\t\t\tconsole.warn(message);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Writes error message to browser console AND sends to main process to dumb to file.\r\n\t * @param message A string, support %s (string), %i (number).\r\n\t * @param optionalParams Params to take place of %s and %i in `message`.\r\n\t */\r\n\tpublic error(message?: any, ...optionalParams: any[]): void {\r\n\t\tif (optionalParams && optionalParams.length) {\r\n\t\t\tconsole.error(message, optionalParams);\r\n\t\t\tthis._mainLogger.error(util.format(message, optionalParams));\r\n\t\t} else {\r\n\t\t\tconsole.error(message);\r\n\t\t\tthis._mainLogger.error(message);\r\n\t\t}\r\n\t}\r\n\r\n}"]}